apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    prometheus-operator-input-hash: "844357500225027913"
  creationTimestamp: "2023-11-16T07:45:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 2.47.2
    operator.prometheus.io/mode: server
    operator.prometheus.io/name: k8s
    operator.prometheus.io/shard: "0"
  name: prometheus-k8s
  namespace: monitoring
  # ownerReferences:
  # - apiVersion: monitoring.coreos.com/v1
  #   blockOwnerDeletion: true
  #   controller: true
  #   kind: Prometheus
  #   name: k8s
  #   uid: d1e42733-a5f1-414a-9c6c-888142faa7be
  # # resourceVersion: "259722"
  # uid: 7168ad50-9fb3-495d-b804-d350750d888b
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      operator.prometheus.io/name: k8s
      operator.prometheus.io/shard: "0"
      prometheus: k8s
  serviceName: prometheus-operated
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: prometheus
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: prometheus
        app.kubernetes.io/instance: k8s
        app.kubernetes.io/managed-by: prometheus-operator
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/part-of: kube-prometheus
        app.kubernetes.io/version: 2.47.2
        operator.prometheus.io/name: k8s
        operator.prometheus.io/shard: "0"
        prometheus: k8s
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --web.console.templates=/etc/prometheus/consoles
        - --web.console.libraries=/etc/prometheus/console_libraries
        # - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
        - --config.file=/etc/config/prometheus.yml
        - --web.enable-lifecycle
        - --web.route-prefix=/
        - --storage.tsdb.retention.time=24h
        - --storage.tsdb.path=/prometheus
        - --web.config.file=/etc/prometheus/web_config/web-config.yaml
        image: quay.io/prometheus/prometheus:v2.47.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          requests:
            memory: 400Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - mountPath: /etc/prometheus/config_out
          name: config-out
          readOnly: true
        - mountPath: /etc/prometheus/certs
          name: tls-assets
          readOnly: true
        - mountPath: /prometheus
          name: prometheus-k8s-db
        - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
          name: prometheus-k8s-rulefiles-0
        - mountPath: /etc/prometheus/web_config/web-config.yaml
          name: web-config
          readOnly: true
          subPath: web-config.yaml
      - args:
        - --listen-address=:8080
        - --reload-url=http://localhost:9090/-/reload
        # - --config-file=/etc/prometheus/config/prometheus.yaml.gz
        - --config-file=/etc/config/prometheus.yml
        # - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
        - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
        command:
        - /bin/prometheus-config-reloader
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SHARD
          value: "0"
        image: quay.io/prometheus-operator/prometheus-config-reloader:v0.69.1
        imagePullPolicy: IfNotPresent
        name: config-reloader
        ports:
        - containerPort: 8080
          name: reloader-web
          protocol: TCP
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - mountPath: /etc/prometheus/config
          name: config
        - mountPath: /etc/prometheus/config_out
          name: config-out
        - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
          name: prometheus-k8s-rulefiles-0
      dnsPolicy: ClusterFirst
      # initContainers:
      # - args:
      #   - --watch-interval=0
      #   - --listen-address=:8080
      #   # - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      #   - --config.file=/etc/config/prometheus.yml
      #   # - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      #   - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      #   command:
      #   - /bin/prometheus-config-reloader
      #   env:
      #   - name: POD_NAME
      #     valueFrom:
      #       fieldRef:
      #         apiVersion: v1
      #         fieldPath: metadata.name
      #   - name: SHARD
      #     value: "0"
      #   image: quay.io/prometheus-operator/prometheus-config-reloader:v0.69.1
      #   imagePullPolicy: IfNotPresent
      #   name: init-config-reloader
      #   ports:
      #   - containerPort: 8080
      #     name: reloader-web
      #     protocol: TCP
      #   resources:
      #     limits:
      #       cpu: 10m
      #       memory: 50Mi
      #     requests:
      #       cpu: 10m
      #       memory: 50Mi
      #   securityContext:
      #     allowPrivilegeEscalation: false
      #     capabilities:
      #       drop:
      #       - ALL
      #     readOnlyRootFilesystem: true
      #   terminationMessagePath: /dev/termination-log
      #   terminationMessagePolicy: FallbackToLogsOnError
      #   volumeMounts:
      #   - name: config-volume
      #     mountPath: /etc/config
      #   - mountPath: /etc/prometheus/config
      #     name: config
      #   - mountPath: /etc/prometheus/config_out
      #     name: config-out
      #   - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
      #     name: prometheus-k8s-rulefiles-0
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccount: prometheus-k8s
      serviceAccountName: prometheus-k8s
      terminationGracePeriodSeconds: 600
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      - name: config
        secret:
          defaultMode: 420
          secretName: prometheus-k8s
      - name: tls-assets
        projected:
          defaultMode: 420
          sources:
          - secret:
              name: prometheus-k8s-tls-assets-0
      - emptyDir:
          medium: Memory
        name: config-out
      - configMap:
          defaultMode: 420
          name: prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - name: web-config
        secret:
          defaultMode: 420
          secretName: prometheus-k8s-web-config
      - emptyDir: {}
        name: prometheus-k8s-db
  updateStrategy:
    type: RollingUpdate
status:
  availableReplicas: 2
  collisionCount: 0
  currentReplicas: 2
  currentRevision: prometheus-k8s-7b9c99897
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updateRevision: prometheus-k8s-7b9c99897
  updatedReplicas: 2
